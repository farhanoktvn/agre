version: '3'
services:

  fastapi:
    build:
        context: ./
        dockerfile: ./api/Dockerfile
    container_name: fastapi
    image: python:3.7-alpine
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DB: ${MONGO_DB}
      MONGODB_USERNAME: ${MONGO_USR}
      MONGODB_PASSWORD: ${MONGO_PWD}
      MONGODB_HOSTNAME: mongodb
    volumes:
      - apidata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.2-bionic
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INIT_ROOT_USR}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INIT_ROOT_PWD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

  webserver:
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    image: nginx:1.19.10-alpine
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - fastapi
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  apidata:
    driver: local
  nginxdata:
    driver: local